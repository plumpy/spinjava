/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */



buildscript {
  repositories {
    jcenter()
    maven { url "http://dl.bintray.com/spinnaker/gradle" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker:spinnaker-gradle-project:1.9.3'
  }
}

apply from: 'gradle/idea.gradle'

ext {
  springBootVersion = "1.1.1.RELEASE"

  commonDependencies = [
    springBootActuator: "org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}",
    springBootDataRest: "org.springframework.boot:spring-boot-starter-data-rest:${springBootVersion}",
    springBootTest    : "org.springframework.boot:spring-boot-starter-test:${springBootVersion}",
    spock             : "org.spockframework:spock-core:0.7-groovy-2.0",
    cglib             : "cglib:cglib-nodep:3.1",
    frigga            : "com.netflix.frigga:frigga:0.11",
    groovy            : "org.codehaus.groovy:groovy-all:2.3.2",
    eureka            : "com.netflix.eureka:eureka-client:1.1.136",
    kork              : "com.netflix.spinnaker.kork:kork-core:1.14",
    amazoncomponents  : 'com.netflix.amazoncomponents:amazoncomponents:0.9.4'
  ]
}

subprojects { project ->
  apply plugin: 'spinnaker-gradle-project'
  apply plugin: 'groovy'

  group = "com.netflix.spinnaker.kato"

  configurations.all {
    resolutionStrategy {
      force "com.netflix.archaius:archaius-core:0.6.0"
    }
  }

  repositories {
    jcenter()
    mavenCentral()
    maven { url 'http://repo.spring.io/repo' }
    mavenLocal()
  }

  dependencies {
    compile commonDependencies.groovy
    testCompile commonDependencies.cglib
    testCompile commonDependencies.spock
  }

  project.tasks.publish.onlyIf { !project.version.endsWith("SNAPSHOT") }
}

tasks.checkSnapshotDependencies.enabled = false
