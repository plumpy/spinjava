/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  ext {
    springBootVersion = "1.1.9.RELEASE"
  }
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
    classpath "com.netflix.nebula:gradle-ospackage-plugin:1.12.2"
  }
}

apply plugin: 'os-package'
apply plugin: 'spring-boot'

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

dependencies {
  compile project(":kato-manual")
  compile project(":kato-core")
  compile project(":kato-aws")
  compile project(":kato-gce")
  compile project(":kato-docker")
  compile 'javax.ws.rs:jsr311-api:1.1.1'
  runtime spinnaker.dependency('kork')
  compile spinnaker.dependency('bootActuator')
  compile spinnaker.dependency('bootDataRest')
}

tasks.bootRepackage.enabled = false

applicationName = 'kato'

sourceSets {
  main {
    resources {
      srcDir 'src/main/resources'
      srcDir 'config'
    }
  }
}

jar {
  doFirst { 
    exclude "${rootProject.name}.yml"
  }
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replace('CLASSPATH=$APP_HOME', 'CLASSPATH=$APP_HOME/config:$APP_HOME')
    windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%APP_HOME%\\config;')
  }
}

ospackage {
  packageName = project.applicationName
  version = project.version.replaceAll('-SNAPSHOT', '')
  release '3'
  into "/opt/${project.applicationName}"
  from ("${project.buildDir}/install/${project.applicationName}")
}

buildDeb {
  dependsOn installApp
  requires("openjdk-7-jre")
}

