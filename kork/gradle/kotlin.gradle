/*
 * Copyright 2017 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License")
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *   http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: "nebula.kotlin"
apply plugin: "kotlin-spring"

dependencies {
  testCompile "org.junit.jupiter:junit-jupiter-api:${spinnaker.version("jupiter")}"
  testCompile "org.junit.platform:junit-platform-runner:${spinnaker.version("junit5")}"
  testCompile "org.jetbrains.spek:spek-api:${spinnaker.version("spek")}"
  testCompile "com.nhaarman:mockito-kotlin:1.5.0"
  testCompile "org.assertj:assertj-core:3.9.0"
  testCompile "io.strikt:strikt-core:0.14.2"

  testRuntime "org.junit.platform:junit-platform-launcher:${spinnaker.version("junit5")}"
  testRuntime "org.junit.jupiter:junit-jupiter-engine:${spinnaker.version("jupiter")}"
  testRuntime "org.junit.vintage:junit-vintage-engine:${spinnaker.version("junitVintage")}"
  testRuntime "org.jetbrains.spek:spek-junit-platform-engine:${spinnaker.version("spek")}"
}

test {
  useJUnitPlatform {
    includeEngines "spek", "junit-vintage", "junit-jupiter"
  }
}

configurations.all {
  resolutionStrategy {
    eachDependency { details ->
      if (details.requested.group == "org.jetbrains.kotlin") {
        details.useVersion kotlinVersion
      }
    }
  }
}

compileKotlin {
  kotlinOptions {
    languageVersion = "1.2"
    jvmTarget = "1.8"
  }
}
