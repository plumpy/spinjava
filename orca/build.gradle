/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
    maven { url "http://spinnaker.bintray.com/gradle" }
  }
  dependencies {
    classpath "com.netflix.spinnaker.gradle:spinnaker-gradle-project:3.5.0"
    classpath "org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE"
  }
}

allprojects {
  apply plugin: "spinnaker.project"
  apply plugin: 'groovy'
  group = "com.netflix.spinnaker.orca"

  spinnaker {
    dependenciesVersion = "0.26.0"
  }
  test {
    testLogging {
      exceptionFormat = 'full'
    }
  }

  configurations.all {
    exclude group: "javax.servlet", module: "servlet-api"
    exclude group: "org.slf4j", module: "slf4j-log4j12"
    exclude group: "org.slf4j", module: "slf4j-simple"
    resolutionStrategy {
      force "org.antlr:antlr-runtime:3.5.2"
      eachDependency {
        if (it.requested.group.startsWith("com.fasterxml.jackson")) {
          it.useVersion spinnaker.version('jackson')
        }
        if (it.requested.group == "com.netflix.rxjava" && it.requested.name == "rxjava-core") {
          it.useTarget group: "io.reactivex", name: "rxjava", version: spinnaker.version('rxJava')
        }
        if (it.requested.group == "org.springframework.batch") {
          it.useVersion spinnaker.version('batch')
        }
        if (it.requested.group == "asm" || it.requested.group == "org.ow2.asm") {
          it.useTarget group: "org.ow2.asm", name: "asm-all", version: "5.0.4"
        }
        if (it.requested.group == "cglib" || it.requested.name == "cglib") {
          it.useTarget group: "cglib", name: "cglib-nodep", version: spinnaker.version('cglib')
        }
        if (it.requested.group == "antlr") {
          it.useTarget group: "org.antlr", name: it.requested.name, version: "3.5.2"
        }
        if (it.requested.group == "org.apache.xbean") {
          it.useVersion "4.5"
        }
      }
    }
  }
}

subprojects {
  dependencies {
    spinnaker.group('spockBase')
    compile spinnaker.dependency('groovy')
    compile spinnaker.dependency('guava')
    compile spinnaker.dependency('slf4jApi')
    testRuntime spinnaker.dependency('slf4jSimple')
  }
}

defaultTasks ":orca-web:bootRun"
