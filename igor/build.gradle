/*
 * Copyright 2014 Netflix, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

buildscript {
  repositories {
    jcenter()
    maven { url "http://dl.bintray.com/spinnaker/gradle" }
  }
  dependencies {
    classpath 'com.netflix.spinnaker:spinnaker-gradle-project:1.12.49'
    classpath 'org.springframework.boot:spring-boot-gradle-plugin:1.2.0.RELEASE'
  }
}


group = 'com.netflix.spinnaker.igor'
apply plugin: 'spinnaker-gradle-project'
apply plugin: 'spinnaker-debpublish'
apply plugin: 'groovy'
apply plugin: 'spring-boot'
apply plugin: 'idea'

repositories {
  jcenter()
  maven { url 'http://dl.bintray.com/spinnaker/spinnaker' }
  maven { url 'http://oss.sonatype.org/content/repositories/staging' }
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

ext {
  springBootVersion = "1.2.0.RELEASE"
}

ideaConfig {
  mainClassName = "com.netflix.spinnaker.igor.Main"
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

dependencies {
  spinnaker.group "test"
  spinnaker.group "bootWeb"
  spinnaker.group "jackson"
  spinnaker.group "retrofitDefault"

  compile spinnaker.dependency("kork")
  compile spinnaker.dependency("jedis")
  compile spinnaker.dependency("guava")
  compile spinnaker.dependency("groovy")
  compile spinnaker.dependency("rxJava")
  compile spinnaker.dependency("retrofit")
  compile spinnaker.dependency("eurekaClient")

  compile 'com.squareup.retrofit:converter-simplexml:1.5.1'
  compile 'cz.jirutka.spring:spring-rest-exception-handler:1.0.0'
  testCompile 'com.squareup.okhttp:mockwebserver:2.1.0'

}
tasks.bootRepackage.enabled = false

applicationName = 'igor'
applicationDefaultJvmArgs = ["-Djava.security.egd=file:/dev/./urandom"]
applicationDistribution.from(project.file('config')) {
    into "config"
}

sourceSets {
    main {
        resources {
            srcDir 'src/main/resources'
          srcDir 'config'
        }
    }
}

jar {
    doFirst {
        exclude "${rootProject.name}.yml"
    }
}

startScripts {
    doLast {
        unixScript.text = unixScript.text.replace('CLASSPATH=$APP_HOME', 'CLASSPATH=$APP_HOME/config:$APP_HOME')
        windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%APP_HOME%\\config;')
    }
}

ospackage {
  packageName = project.applicationName
  version = project.version.replaceAll("-SNAPSHOT", "")
  release '3'
  into "/opt/${project.applicationName}"
  from "${project.buildDir}/install/${project.applicationName}"
}

buildDeb {
  dependsOn installApp
  requires("openjdk-7-jre")
  requires("redis-server")
}
