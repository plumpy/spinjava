buildscript {
  ext {
    springBootVersion = "1.2.1.RELEASE"
  }
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
  }
}

apply plugin: 'spring-boot'
apply plugin: 'spinnaker-debpublish'
apply plugin: 'groovy'
apply plugin: 'idea'

repositories {
  jcenter()
  maven { url "http://repo.spring.io/snapshot" }
}

dependencies {
  compile project(":gate-manual")

  spinnaker.group('retrofitDefault')
  spinnaker.group("bootWeb")
  spinnaker.group("test")
  compile spinnaker.dependency("groovy")
  compile spinnaker.dependency("kork")
  compile spinnaker.dependency("korkSwagger")
  compile spinnaker.dependency("korkWeb")
  compile spinnaker.dependency("frigga")
  compile spinnaker.dependency('cglib')
  compile('org.springframework.session:spring-session-data-redis:1.0.0.RELEASE') {
    exclude module: 'spring-data-redis'
  }
  compile 'org.springframework.data:spring-data-redis:1.4.1.RELEASE'
  compile 'com.netflix.hystrix:hystrix-core:1.4.0-RC5'
  compile 'com.netflix.hystrix:hystrix-metrics-event-stream:1.4.0-RC5'
  compile "org.springframework.boot:spring-boot-starter-security:${springBootVersion}"
  compile 'org.opensaml:opensaml:2.6.4'
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

ideaConfig {
  mainClassName = 'com.netflix.spinnaker.gate.Main'
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replace('CLASSPATH=$APP_HOME', 'CLASSPATH=$APP_HOME/config:$APP_HOME')
    windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%APP_HOME%\\config;')
  }
}

applicationName = 'gate'
applicationDefaultJvmArgs = ["-Djava.security.egd=file:/dev/./urandom"]
applicationDistribution.from(project.file('config')) {
  into 'config'
}


ospackage {
  packageName = project.applicationName
  version = project.version.replaceAll("-SNAPSHOT", "")
  release '3'
  into "/opt/${project.applicationName}"
  from "${project.buildDir}/install/${project.applicationName}"
}
buildDeb {
  dependsOn installApp
}

tasks.bootRepackage.enabled = false

