ext {
  springConfigLocation = System.getProperty('spring.config.location', "${System.getProperty('user.home')}/.spinnaker/")
}

tasks.withType(org.springframework.boot.gradle.run.BootRunTask) {
  systemProperty('spring.config.location', project.springConfigLocation)
}

apply plugin: 'spring-boot'
apply plugin: 'nebula.ospackage'
apply plugin: 'groovy'
apply plugin: 'idea'

dependencies {
  compile project(":gate-manual")
  compile project(":gate-core")
  compile project(":gate-netflix")

  spinnaker.group('retrofitDefault')
  spinnaker.group("test")
  compile spinnaker.dependency("kork")
  compile spinnaker.dependency("korkSwagger")
  compile spinnaker.dependency("korkWeb")
  compile spinnaker.dependency("frigga")
  compile spinnaker.dependency('cglib')
  compile('org.springframework.session:spring-session-data-redis:1.0.1.RELEASE')

  //this brings in the jetty GzipFilter which boot will autoconfigure
  runtime 'org.eclipse.jetty:jetty-servlets:9.2.11.v20150529'
}

configurations.all {
  exclude group: 'javax.servlet', module: 'servlet-api'
  exclude group: "org.slf4j", module: "slf4j-log4j12"
}

startScripts {
  doLast {
    unixScript.text = unixScript.text.replace('CLASSPATH=$APP_HOME', 'CLASSPATH=$APP_HOME/config:$APP_HOME')
    windowsScript.text = windowsScript.text.replace('set CLASSPATH=', 'set CLASSPATH=%APP_HOME%\\config;')
  }
}

applicationName = 'gate'
applicationDefaultJvmArgs = ["-Djava.security.egd=file:/dev/./urandom"]
applicationDistribution.from(project.file('config')) {
  into 'config'
}

ospackage {
  packageName = project.applicationName
  version = project.version
  release '3'
  into "/opt/${project.applicationName}"
  from "${project.buildDir}/install/${project.applicationName}"
}
buildDeb {
  dependsOn installApp
}

tasks.bootRepackage.enabled = false

